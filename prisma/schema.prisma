// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(uuid())
  name          String
  email         String       @unique
  password      String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  sentMessages     Message[]    @relation("SentMessages")
  receivedMessages Message[]    @relation("ReceivedMessages")
  sentFriendRequests    Friendship[] @relation("Requester")
  receivedFriendRequests Friendship[] @relation("Addressee")
  conversationsAsUser1 Conversation[] @relation("ConversationUser1")
  conversationsAsUser2 Conversation[] @relation("ConversationUser2")
}

model Message {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  senderId  String
  receiverId String
  sender    User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver  User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  conversationId String?
  conversation Conversation? @relation(fields: [conversationId], references: [id])
}

model Friendship {
  id          String   @id @default(uuid())
  status      String   @default("PENDING") // "PENDING", "ACCEPTED", "REJECTED"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  requesterId String
  addresseeId String
  requester   User     @relation("Requester", fields: [requesterId], references: [id])
  addressee   User     @relation("Addressee", fields: [addresseeId], references: [id])

  @@unique([requesterId, addresseeId])
}

model Conversation {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user1Id   String
  user2Id   String
  user1     User     @relation("ConversationUser1", fields: [user1Id], references: [id])
  user2     User     @relation("ConversationUser2", fields: [user2Id], references: [id])
  messages  Message[]

  @@unique([user1Id, user2Id])
}